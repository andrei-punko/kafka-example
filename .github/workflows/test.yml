name: Test Kafka Configurations

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      config:
        description: 'Which configuration to test'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - single-node
          - cluster

jobs:
  test-single-node:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.config == 'all' || github.event.inputs.config == 'single-node') || github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      
      - name: Start single-node Kafka
        run: |
          cd single-node
          docker compose up -d
          sleep 30
      
      - name: Check if Kafka is running
        run: |
          cd single-node
          docker compose ps
          docker compose logs kafka
      
      - name: Check if topics are created
        run: |
          docker exec kafka kafka-topics --bootstrap-server localhost:9092 --list
      
      - name: Cleanup
        if: always()
        run: |
          cd single-node
          docker compose down

  test-cluster:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.config == 'all' || github.event.inputs.config == 'cluster') || github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      
      - name: Start cluster Kafka
        run: |
          cd cluster
          docker compose up -d
          sleep 30
      
      - name: Check if Kafka cluster is running
        run: |
          cd cluster
          docker compose ps
          docker compose logs kafka1
          docker compose logs kafka2
      
      - name: Check if topics are created
        run: |
          docker exec kafka1 kafka-topics --bootstrap-server localhost:9092 --list
      
      - name: Cleanup
        if: always()
        run: |
          cd cluster
          docker compose down 